#! /bin/sh

###debug
tmpfile=$(mktemp /tmp/gfarm-s3-login.XXXXXX) || exit 1
exec 2>$tmpfile

export LANG=C
export LC_CTYPE=C
export LC_COLLATE=C

set -o xtrace

. @sysconfdir@/gfarm-s3.conf
. $GFARM_S3_BIN/gfarm-s3-subr


USAGE="\
usage: $0 [options...] action global-username password
options ::= --gfarm_shared_dir gfarm_shared_dir |
            --authenticated authenticated_method_name |
            --bucket bucket
action ::= start|stop|restart|status|info|gfuser|gfgroup|gfls|gfgetfacl|gfsetfacl|keygen
"

authenticated=""
gfarm_shared_dir_arg=""
bucket=""

while [ $# -gt 0 ]; do
	opt="$1"
	case "$opt" in
	--authenticated) authenticated="$2"; shift;;
	--gfarm_shared_dir) gfarm_shared_dir_arg="$2"; shift;;
	--bucket) bucket="$2"; shift;;
	*) break;;
	esac
	shift;
done

if [ $# != 3 ]; then
	echo "$USAGE" 1>&2
	exit 1
fi

action="$1"
global_username="$2"
user_password="$3"

case "$action" in
start|stop|restart|status|info|gfuser|gfgroup|gfls|gfgetfacl|gfsetfacl|keygen) ;;
*) echo $USAGE 1>&2; exit 1;;
esac

usermap_entry=$(lookup_usermap_by_global_username "$global_username" "$GFARMS3_LOCAL_USER_MAP")
if [ -z "$usermap_entry" ]; then
	echo "user not found: $global_username"
	exit 1
fi
local_username=$(get_local_username "$usermap_entry")

status=failure
if [ -n "$authenticated" ]; then
	authenticated_method="$authenticated"
elif ! authenticated_method=$(challenge_auth "$global_username" "$user_password" "$local_username"); then
cat <<-EOF
	{
		"status": "$status",
		"reason": "no authentication method succeeded"
	}
EOF
	exit 1
fi

if ! case $authenticated_method in
myproxy-logon|grid-proxy-init)
	expiration_date=$(certificate_timeleft_grid_proxy_info);;
gfkey)
	expiration_date=$(certificate_timeleft_gfkey);;
unspecified)
	expiration_date=-1; true;;
*)
	expiration_date=-1; false;;
esac; then
cat <<-EOF
	{
		"status": "$status",
		"reason": "no valid certificate"
	}
EOF
	exit 1
fi

if [ -n "$gfarm_shared_dir_arg" ]; then
	gfarm_shared_dir="$gfarm_shared_dir_arg"
else
	gfarm_shared_dir="$GFARMS3_GFARM_SHARED_DIR/$global_username"
fi

case "$action" in
start)
	spawn_per_user_server "$local_username" "$gfarm_shared_dir";;
stop)
	stop_per_user_server "$local_username";;
restart)
	stop_per_user_server "$local_username" &&
	spawn_per_user_server "$local_username" "$gfarm_shared_dir";;
status)
	get_per_user_status "$local_username";;
info)
	true;;
gfuser)
	mysudo "$local_username" $GFUSER -l; exit $?;;
gfgroup)
	mysudo "$local_username" $GFGROUP; exit $?;;
gfls)
	mysudo "$local_username" $GFLS "$gfarm_shared_dir/$bucket"; exit $?;;
gfgetfacl)
	mysudo "$local_username" $GFGETFACL "$gfarm_shared_dir/$bucket"; exit $?;;
gfsetfacl)
	mysudo "$local_username" $GFSETFACL -b -M - "$gfarm_shared_dir/$bucket"; exit $?;;
keygen)
	regenerate_secret_key "$local_username";;
esac

exit_status=$?

if [ $exit_status = 0 ]; then
	status=success
	reason="none"
else
	status=failure
	reason="$action exit: code = $exit_status"
fi

cat <<-EOF
	{
		"status": "$status",
		"reason": "$reason",
		"authenticated_method": "$authenticated_method",
		"expiration_date": $expiration_date,
		"global_username": "$(get_global_username "$usermap_entry")",
		"local_username": "$(get_local_username "$usermap_entry")",
		"access_key": "$(get_access_key "$usermap_entry")",
		"secret_key": "$(get_per_user_secret_key "$local_username")"
	}
EOF
