#! /bin/bash

set -eu -o pipefail
#set -x

export LANG=C
export LC_CTYPE=C
export LC_COLLATE=C

show_secret_key() {
	cat "$GFARMS3_SECRET_KEY"
}

show_secret_key_file() {
	echo "$GFARMS3_SECRET_KEY"
}

regenerate_secret() {
	GFARMS3_DIR="$(dirname "$GFARMS3_SECRET_KEY")"
	mkdir -p "$GFARMS3_DIR"
	chmod 700 "$GFARMS3_DIR"
	generate_secret_key > "$GFARMS3_SECRET_KEY"
	chmod 600 "$GFARMS3_SECRET_KEY"
}

variables_overridable="MINIO_PATH \
	GFARMS3_GFARM_SHARED_DIR \
	GFARMS3_GFARM_SHARED_VIRTUAL_NAME \
	GFARMS3_CACHE_BASEDIR \
	GFARMS3_CACHE_SIZE_MB_PER_USER \
	GFARMS3_PARTFILE_DIGEST \
	GFARMS3_METADIR \
	GFARMS3_SECRET_KEY"
### $GFARMS3_LOCAL_USER_MAP may not be overrided

for var in $variables_overridable; do
	eval SAVED_$var=\${$var:-}
done

D=$(dirname $0)
eval $(${D}/gfarm-s3-readconf)
source $GFARM_S3_LIB/gfarm-s3-subr

GFARMS3_SECRET_KEY="$(get_user_metadir $USER)/secret_key"

for var in $variables_overridable; do
	eval sv=\${SAVED_$var}
	if [ -n "$sv" ]; then
		eval $var=$sv
	fi
done

USAGE="\
usage: $0 [--start] {common options} [--global_username global] --gfarm_shared_dir gfarm_shared_dir
       $0 --stop    {common options}
       $0 --status  {common options}
       $0 --show-secret-key
       $0 --show-secret-key-file
       $0 --regenerate-secret-key
common options:
          [--access_key access_key]
          [--secret_key secret_key]
          [--port port]
"

global_username=
access_key=
secret_key=
action=START
uport=
resume=0

gfarm_shared_dir=

while [ $# -gt 0 ]; do
	opt="$1"
	case "$opt" in
	--access_key) access_key="$2"; shift;;
	--secret_key) secret_key="$2"; shift;;
	--global_username) global_username="$2"; shift;;
	--resume) resume=1;;
	--start) action="START";;
	--stop) action="STOP";;
	--status) action="STATUS";;
	--status-quick) action="STATUS";;
	--show-secret-key) action="SECRET_SHOW";;
	--show-secret-key-file) action="SECRET_SHOW_FILENAME";;
	--regenerate-secret-key) action="SECRET_REGENERATE";;
	--port) uport="$2"; shift;;
	--gfarm_shared_dir) gfarm_shared_dir="$2"; shift;;
	*) break;;
	esac
	shift;
done

if [ $# != 0 ]; then
	echo "gfarm-s3-server: argment number:" "$@" 1>&2
	echo "$USAGE" 1>&2
	exit 1
fi

if [ "$action" = "START" -a -z "$gfarm_shared_dir" ]; then
	echo "--gfarm_shared_dir is mandatory" 1>&2
	exit 1
fi

if [ -z "$access_key" -o -z "$global_username" ]; then
	usermap_entry=$(lookup_usermap_by_local_username "$USER" "$GFARMS3_LOCAL_USER_MAP")
	if [ -z "$usermap_entry" ]; then
		echo "user not found: $USER" 1>&2
		return 1
	fi
	if [ -z "$access_key" ]; then
		access_key=$(get_access_key "$usermap_entry")
	fi
	if [ -z "$global_username" ]; then
		global_username=$(get_global_username "$usermap_entry")
	fi
fi

#export MINIO_CACHE="on"
#export MINIO_CACHE_DRIVES="/mnt/cache1"
#export MINIO_CACHE_EXCLUDE="uncached/*"
#export MINIO_CACHE_QUOTA="80"
#export MINIO_CACHE_AFTER="0"
#export MINIO_CACHE_WATERMARK_LOW="70"
#export MINIO_CACHE_WATERMARK_HIGH="90"

### set in gfarm-s3-subr
# MINIO_GFARM_LOCALTMP_DIR
# MINIO_GFARM_LOCALTMP_SIZE_MB
# MINIO_GFARM_PARTFILE_DIGEST

export MINIO_ROOT_USER="$access_key"
if [ ! -f "$GFARMS3_SECRET_KEY" ]; then regenerate_secret; fi
export MINIO_ROOT_PASSWORD=${secret_key:-$(cat "$GFARMS3_SECRET_KEY")}

export MINIO_ACCESS_KEY="$MINIO_ROOT_USER"
export MINIO_SECRET_KEY="$MINIO_ROOT_PASSWORD"

export MINIO_GFARM_SYSLOG_FACILITY="${GFARM_S3_LOG_FACILITY}"
export MINIO_GFARM_SYSLOG_LEVEL="${GFARM_S3_LOG_LEVEL}"

if [ -z "$MINIO_ROOT_USER" ]; then exit 1; fi
if [ -z "$MINIO_ROOT_PASSWORD" ]; then exit 1; fi

export GLOBUS_GSSAPI_NAME_COMPATIBILITY="HYBRID"

case $action in
START) start_server "$gfarm_shared_dir" "$resume";;
STOP) stop_server "$resume";;
STATUS) status_server;;
SECRET_SHOW) show_secret_key;;
SECRET_SHOW_FILENAME) show_secret_key_file;;
SECRET_REGENERATE) regenerate_secret;;
esac
