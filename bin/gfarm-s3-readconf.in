#! /bin/bash

set -eu
#set -x

CONF_DEFAULT=@sysconfdir@/gfarm-s3.conf
CONF=@sysconfdir@/gfarm-s3-overwrite.conf

CACHE="/tmp/gfarm-s3.conf.cache.${UID}"

OPT_JSON="${1:-}"

if [ "${OPT_JSON}" = "-json" ]; then
    JSON=1
    CACHE="${CACHE}.json"
else
    JSON=0
fi

if [ "$CACHE" -nt "$CONF_DEFAULT" -a "$CACHE" -nt "$CONF" ]; then
    cat "$CACHE"
    exit 0
fi

conf_filter()
{
    # ignore $(...) and `...`
    egrep "^[^\\s#=]+=[^=]*$" "${1}" \
    | egrep -v "\\$\\([^\\)]+\\)" \
    | egrep -v "\`[^\`]+\`)"
}

SAVE_IFS=$IFS
IFS="
"

C1=$(conf_filter "${CONF_DEFAULT}")

declare -A KEYS

for kv in $C1; do
    k=${kv%=*}
    v=${kv#*=}
    KEYS[$k]=1  # exist

    # evaluate per line
    eval $kv
done

C2=$(conf_filter "${CONF}")

for kv in $C2; do
    k=${kv%=*}
    v=${kv#*=}
    if [ "${KEYS[$k]:-}" = "1" ]; then
        # overwrite only
        eval $kv
    fi
done

to_json()
{
    echo "{"
    first=1
    # from keys of C1
    for k in "${!KEYS[@]}"; do
        if [ $first -eq 0 ]; then
            echo ","
        fi
        v=$(eval echo \$$k)
        v=$(echo $v | sed 's/"/\\"/')
        echo -n "\"$k\": \"$v\""
        first=0
    done
    echo ""
    echo "}"
}

to_sh()
{
    # from keys of C1
    for k in "${!KEYS[@]}"; do
        v=$(eval echo \$$k)
        v=$(echo $v | sed 's/"/\\"/')
        echo "$k=\"$v\""
    done
}

save_tmp()
{
    FUNC="$1"

    # use PID
    CACHE_TMP="${CACHE}.tmp.${FUNC}.$$"
    rm -f "${CACHE_TMP}"
    touch "${CACHE_TMP}"
    chmod 600 "${CACHE_TMP}"
    ${FUNC} | tee "${CACHE_TMP}"
    mv "${CACHE_TMP}" "${CACHE}"
}

if [ "${JSON}" -eq 1 ]; then
    save_tmp to_json
else
    save_tmp to_sh
fi
