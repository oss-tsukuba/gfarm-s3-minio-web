Gfarm S3


1. Overview

Gfarm-S3 is a S3 compatible service system for Gfarm.

Gfarm-S3 consists of S3 compatible server (MinIO),
reverse proxy (Apache),
wsgi server (gunicorn),
and WebUI framework (Django).


1.1 Quick Installation

Though the Gfarm-S3 installation procedure is complecated 
for Gfarm-S3 depends on non-standard software,
the following procedure will do for most environment.

### obtain source code

  $ GFARM_SE_MINIO_WEB_SRC=/mnt/work/gfarm-s3-minio-web
  $ cd $(dirname $GFARM_SE_MINIO_WEB_SRC)
  $ git clone git@github.com:oss-tsukuba/gfarm-s3-minio-web.git
  $ (cd gfarm-s3-minio-web && git checkout develop)
  $ GFARM_SE_MINIO_SRC=/mnt/work/gfarm-s3-minio
  $ cd $(dirname $GFARM_SE_MINIO_SRC)
  $ git clone git@github.com:oss-tsukuba/gfarm-s3-minio.git
  $ (cd gfarm-s3-minio && git checkout gatewaygfarm)

### choose parameters
  | GFARM_S3_PREFIX=/usr/local
  | SHARED_DIR=/share
  | CACHE_BASEDIR=/mnt/cache
  | CACHE_SIZE=1024
  | WSGI_USER=wsgi
  | WSGI_GROUP=wsgi
  | WSGI_HOMEDIR=/home/wsgi
  | WSGI_PORT=8000
  |
  | MYPROXY_SERVER=
  | USERS=$GFDOCKER_GFARMS3_USERS

### install prerequisites
  $ sudo yum update -y
  $ sudo yum install -y \
	httpd \
	mod_ssl \
	uuid \
	myproxy \
	python3-devel \
	python3-pip \
	nodejs \

### nginx is not supported yet
### sudo yum install -y nginx

  $ sudo python3 -m pip install 'Django<2.2'
  $ sudo python3 -m pip install gunicorn
  $ sudo python3 -m pip install boto3

### site settings

## deploy apache http server
  $ HTTPD_CONF=/etc/httpd/conf.d/myserver.conf
  $ HTTPD_DocumentRoot=/usr/local/share/www


  $ cat <<EOF | sudo dd of=$HTTPD_CONF
ServerName ${GFDOCKER_SUBNET%.0/24}.$GFDOCKER_START_HOST_ADDR
<VirtualHost *:80>
	DocumentRoot $HTTPD_DocumentRoot
	ServerAdmin root@localhost
	CustomLog logs/access_log common
	ErrorLog logs/error_log

	<Directory "$HTTPD_DocumentRoot">
		AllowOverride FileInfo AuthConfig Limit Indexes
		Options MultiViews Indexes SymLinksIfOwnerMatch Includes
		AllowOverride All
		Require all granted
	</Directory>

</VirtualHost>
EOF


  $ sudo mkdir -p $HTTPD_DocumentRoot
  $ echo "gfarm -- $(date)" | sudo dd of=$HTTPD_DocumentRoot/index.html


  $ sudo systemctl enable httpd

### nginx is not supported yet
#vi /etc/nginx/nginx.conf
#systemctl enable nginx.service
## debug
#chmod o+rx /var/log/nginx

## create user for wsgi
  $ id $WSGI_USER || sudo useradd $WSGI_USER -g $WSGI_GROUP -d $WSGI_HOMEDIR

#### install gfarm-s3

## choose working directory
## feel free to remove working directory after installation procedure finished
  $ export WORK=$HOME/tmp/work
  $ mkdir -p $WORK
  $ export MINIO_BUILDDIR=$HOME/tmp/work
  $ mkdir -p $MINIO_BUILDDIR
  $ mkdir -p $MINIO_BUILDDIR/minio/work/build

## copy source code into woking space
  $ rsync -a $GFARM_SE_MINIO_WEB_SRC/ $WORK/gfarm-s3-minio-web/
  $ if [ -e $GFARM_SE_MINIO_SRC ]; then
  >	rsync -a $GFARM_SE_MINIO_SRC/ $MINIO_BUILDDIR/minio/work/build/gfarm-s3-minio/
  > fi

  $ (cd $WORK/gfarm-s3-minio-web && ./configure \
	--prefix=$GFARM_S3_PREFIX \
	--with-gfarm=/usr/local \
	--with-globus=/usr \
	--with-myproxy=/usr \
	--with-apache=/usr \
	--with-gunicorn=/usr/local \
	--with-wsgi-homedir=$WSGI_HOMEDIR \
	--with-wsgi-user=$WSGI_USER \
	--with-wsgi-group=$WSGI_GROUP \
	--with-wsgi-port=$WSGI_PORT \
	--with-cache-basedir=$CACHE_BASEDIR \
	--with-cache-size=$CACHE_SIZE \
	--with-myproxy-server=$MYPROXY_SERVER \
	--with-gfarm-shared-dir=$SHARED_DIR \
	--with-minio-builddir=$MINIO_BUILDDIR)

  $ (cd $WORK/gfarm-s3-minio-web/minio && make install-go)
  $ (cd $WORK/gfarm-s3-minio-web && make)
  $ (cd $WORK/gfarm-s3-minio-web && sudo make install)

#### gfarm-s3-settings

## create cache directory
  $ sudo mkdir -p $CACHE_BASEDIR
  $ sudo chmod 1777 $CACHE_BASEDIR

## create shared directory
  $ gfmkdir -p ${SHARED_DIR#/} || true
  $ gfchmod 1777 ${SHARED_DIR#/} || true

## register users
  $ sudo $GFARM_S3_PREFIX/bin/gfarm-s3-useradd hpci0001 user1 s3accesskeyid
  $ sudo usermod -a -G gfarms3 user1
  $ gfmkdir ${SHARED_DIR#/}/$local_user || true

## fix httpd.conf
## stop httpd
  $ sudo apachectl stop

## add following file content to httpd.conf
  | $WORK/gfarm-s3-minio-web/etc/apache-gfarm-s3.conf

## add link to index page
echo '<a href="/d/console">gfarm-s3</a>' |
	sudo dd conv=notrunc conv=append of=$HTTPD_DocumentRoot/index.html

## start httpd
  $ sudo apachectl start

## start gunicorn service
  $ sudo systemctl enable --now gunicorn.service

## cleanup
  $ (cd $WORK/gfarm-s3-minio-web && sudo make clean)
  $ (cd $WORK/gfarm-s3-minio-web && sudo make distclean)

## show sharedsecret password
  $ $GFARM_S3_PREFIX/bin/gfarm-s3-sharedsecret-password



----------- followings are not finished -----------


2. PREREQUISITES


   gfarm-2.7
   
        httpd -- Apache
        uuid 
        myproxy 
        python3-devel 
        python3-pip 
        nodejs 

'Django<2.2'
gunicorn


Note: Django newer 2.2 requires sqlite 3.8
which is not installed Centos7.
On Centos7, upgrading sqlite to 3.8 may affect
to other programs behaviour.



3.

3.1 get source code


GFARM_SE_MINIO_WEB_SRC=/mnt/work/gfarm-s3-minio-web
GFARM_SE_MINIO_SRC=/mnt/work/gfarm-s3-minio

3.2 choose parameters

GFARM_S3_PREFIX=/usr/local

  The installation prefix for Gfarm-S3



SHARED_DIR=$GFDOCKER_GFARMS3_SHARED_DIR

  The Gfarm directroy that stores 
    


CACHE_BASEDIR=$GFDOCKER_GFARMS3_CACHE_BASEDIR

CACHE_SIZE=$GFDOCKER_GFARMS3_CACHE_SIZE




Choose wsgi user

WSGI_USER=wsgi
WSGI_GROUP=wsgi

	The user & group that runs gunicoron

WSGI_PORT=8000

	The port of gunicorn service

WSGI_HOMEDIR=/home/wsgi
	Django application, databases, and static contents
	are installed in this directory.



MYPROXY_SERVER= (none)

	This value is passed to myproxy-logon 



4. configure & build


4.1
Choose the working directory for building Gfarm-S3.

MINIO_BUILDDIR:
Building Gfarm-S3 requires working golang environment.
To simplify building procedure, makefile automatically downloads and install
golang into temporary working directory.



4.2 configure

configure options:

        --prefix=$GFARM_S3_PREFIX \
        --with-gfarm=/usr/local \
        --with-globus=/usr \
        --with-myproxy=/usr \
        --with-apache=/usr \
        --with-gunicorn=/usr/local \
        --with-wsgi-homedir=$WSGI_HOMEDIR \
        --with-wsgi-user=$WSGI_USER \
        --with-wsgi-group=$WSGI_GROUP \
        --with-wsgi-port=$WSGI_PORT \
        --with-cache-basedir=$CACHE_BASEDIR \
        --with-cache-size=$CACHE_SIZE \  
        --with-myproxy-server=$MYPROXY_SERVER \
        --with-gfarm-shared-dir=$SHARED_DIR \
        --with-minio-builddir=$MINIO_BUILDDIR


4.3 check Gfarm-s3 settings

Review etc/gfarm-s3.conf.

IMPORTANT:
Maximum user number is limited to GFARMS3_PORT_MAX - GFARMS3_PORT_MIN.
Change GFARMS3_PORT_MAX and GFARMS3_PORT_MIN to appropriate values
that meet your envirnment.



4.3 build

$ make install-go
$ make
$ sudo make install


4.4 create data directory

4.4.1 create cache directory

$ sudo mkdir -p $CACHE_BASEDIR
$ sudo chmod 1777 $CACHE_BASEDIR

4.4.2 create cache directory
create shared directory (on Gfarm)
gfmkdir -p $SHARED_DIR
gfchmod 1777 $SHARED_DIR


4.5 register users

The Gfarm-S3 system 


4.5.1 register users using gfarm-s3-useradd

The
gfarm-s3-useradd adds a user to Gfarm-S3 system.

example:
$ gfarm-s3-useradd global001 local001 s3accesskeyid


4.5.2 register users using gfarm-s3-viusermap

file format is following:

The file contains tuples of global username, local username, and access-key-ID
one per line.
Lines starting with '#' are ignored.

global username, local username, and access-key-ID are separeted with
a ':'.

